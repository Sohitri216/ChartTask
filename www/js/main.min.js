(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

angular.module('ChartTask', [
    'ui.router',
    'ui.bootstrap',
    'ngDraggable',
    'ng-fusioncharts',
    require('./modules').name
])

},{"./modules":2}],2:[function(require,module,exports){
'use strict';

module.exports = angular.module('ChartTask.modules', [
    require('./public').name
]);

},{"./public":5}],3:[function(require,module,exports){
'use strict';
module.exports = {
    /**
     * [ChartData containing dummy data for an e-commerce site]
     * @type {Array}
     */
    ChartData: [{
        /**
         * [Brand Vs Revenue]
         * @type {Object}
         */
        params: {
            dimension: 'Brand',
            measure: 'Revenue'
        },
        chart: {
            "caption": "Revenue Collected by top 5 brands",
            "subCaption": "Last month",
            "yAxisName": "Revenue (In USD)",
            "numberPrefix": "$",
            "paletteColors": "#0075c2",
            "bgColor": "#ffffff",
            "showBorder": "0",
            "showCanvasBorder": "0",
            "usePlotGradientColor": "0",
            "plotBorderAlpha": "10",
            "placeValuesInside": "1",
            "valueFontColor": "#ffffff",
            "showAxisLines": "1",
            "axisLineAlpha": "25",
            "divLineAlpha": "10",
            "alignCaptionWithCanvas": "0",
            "showAlternateVGridColor": "0",
            "captionFontSize": "14",
            "subcaptionFontSize": "14",
            "subcaptionFontBold": "0",
            "toolTipColor": "#ffffff",
            "toolTipBorderThickness": "0",
            "toolTipBgColor": "#000000",
            "toolTipBgAlpha": "80",
            "toolTipBorderRadius": "2",
            "toolTipPadding": "5"
        },
        data: [{
            label: "Samsung",
            value: "33000"
        }, {
            label: "Motorola",
            value: "54000"
        }, {

            label: "Asus",
            value: "23000"
        }, {
            label: "Sony",
            value: "48000"
        }, {
            label: "Lenovo",
            value: "40000"
        }]
    }, {
        /**
         * [Brand Vs Sales]
         * @type {Object}
         */
        params: {
            dimension: 'Brand',
            measure: 'Sales'
        },
        chart: {
            "caption": "Top 5 Brands by sales",
            "subCaption": "Last month",
            "yAxisName": "Sales (In USD)",
            "numberPrefix": "$",
            "paletteColors": "#0075c2",
            "bgColor": "#ffffff",
            "showBorder": "0",
            "showCanvasBorder": "0",
            "usePlotGradientColor": "0",
            "plotBorderAlpha": "10",
            "placeValuesInside": "1",
            "valueFontColor": "#ffffff",
            "showAxisLines": "1",
            "axisLineAlpha": "25",
            "divLineAlpha": "10",
            "alignCaptionWithCanvas": "0",
            "showAlternateVGridColor": "0",
            "captionFontSize": "14",
            "subcaptionFontSize": "14",
            "subcaptionFontBold": "0",
            "toolTipColor": "#ffffff",
            "toolTipBorderThickness": "0",
            "toolTipBgColor": "#000000",
            "toolTipBgAlpha": "80",
            "toolTipBorderRadius": "2",
            "toolTipPadding": "5"
        },
        data: [{
            label: "Samsung",
            value: "23000"
        }, {
            label: "Motorola",
            value: "54000"
        }, {

            label: "Asus",
            value: "42000"
        }, {
            label: "Sony",
            value: "28000"
        }, {
            label: "Lenovo",
            value: "17000"
        }]
    }, {
        /**
         * [Brand vs Order]
         * @type {Object}
         */
        params: {
            dimension: 'Brand',
            measure: 'Order'
        },
        chart: {
            "caption": "Top 5 Brands ordered",
            "subCaption": "Last month",
            "yAxisName": "Order",
            "numberPrefix": "",
            "paletteColors": "#0075c2",
            "bgColor": "#ffffff",
            "showBorder": "0",
            "showCanvasBorder": "0",
            "usePlotGradientColor": "0",
            "plotBorderAlpha": "10",
            "placeValuesInside": "1",
            "valueFontColor": "#ffffff",
            "showAxisLines": "1",
            "axisLineAlpha": "25",
            "divLineAlpha": "10",
            "alignCaptionWithCanvas": "0",
            "showAlternateVGridColor": "0",
            "captionFontSize": "14",
            "subcaptionFontSize": "14",
            "subcaptionFontBold": "0",
            "toolTipColor": "#ffffff",
            "toolTipBorderThickness": "0",
            "toolTipBgColor": "#000000",
            "toolTipBgAlpha": "80",
            "toolTipBorderRadius": "2",
            "toolTipPadding": "5"
        },
        data: [{
            label: "Samsung",
            value: "14000"
        }, {
            label: "Motorola",
            value: "9000"
        }, {

            label: "Asus",
            value: "15000"
        }, {
            label: "Sony",
            value: "17000"
        }, {
            label: "Lenovo",
            value: "11000"
        }]
    }, {
        /**
         * [Category vs Revenue]
         * @type {Object}
         */
        params: {
            dimension: 'Category',
            measure: 'Revenue'
        },
        chart: {
            "caption": "Revenue collected by top 5 categories",
            "subCaption": "Last month",
            "yAxisName": "Revenue",
            "numberPrefix": "$",
            "paletteColors": "#0075c2",
            "bgColor": "#ffffff",
            "showBorder": "0",
            "showCanvasBorder": "0",
            "usePlotGradientColor": "0",
            "plotBorderAlpha": "10",
            "placeValuesInside": "1",
            "valueFontColor": "#ffffff",
            "showAxisLines": "1",
            "axisLineAlpha": "25",
            "divLineAlpha": "10",
            "alignCaptionWithCanvas": "0",
            "showAlternateVGridColor": "0",
            "captionFontSize": "14",
            "subcaptionFontSize": "14",
            "subcaptionFontBold": "0",
            "toolTipColor": "#ffffff",
            "toolTipBorderThickness": "0",
            "toolTipBgColor": "#000000",
            "toolTipBgAlpha": "80",
            "toolTipBorderRadius": "2",
            "toolTipPadding": "5"
        },
        data: [{
            label: "Mobile Phone",
            value: "67000"
        }, {
            label: "Laptop",
            value: "88000"
        }, {

            label: "Television",
            value: "72000"
        }, {
            label: "Refrigerator",
            value: "81000"
        }, {
            label: "Head Phone",
            value: "75000"
        }]
    }, {
        /**
         * [Category vs Sales]
         * @type {Object}
         */
        params: {
            dimension: 'Category',
            measure: 'Sales'
        },
        chart: {
            "caption": "Top 5 categories by sale",
            "subCaption": "Last month",
            "yAxisName": "Sales",
            "numberPrefix": "$",
            "paletteColors": "#0075c2",
            "bgColor": "#ffffff",
            "showBorder": "0",
            "showCanvasBorder": "0",
            "usePlotGradientColor": "0",
            "plotBorderAlpha": "10",
            "placeValuesInside": "1",
            "valueFontColor": "#ffffff",
            "showAxisLines": "1",
            "axisLineAlpha": "25",
            "divLineAlpha": "10",
            "alignCaptionWithCanvas": "0",
            "showAlternateVGridColor": "0",
            "captionFontSize": "14",
            "subcaptionFontSize": "14",
            "subcaptionFontBold": "0",
            "toolTipColor": "#ffffff",
            "toolTipBorderThickness": "0",
            "toolTipBgColor": "#000000",
            "toolTipBgAlpha": "80",
            "toolTipBorderRadius": "2",
            "toolTipPadding": "5"
        },
        data: [{
            label: "Mobile Phone",
            value: "67000"
        }, {
            label: "Laptop",
            value: "88000"
        }, {

            label: "Television",
            value: "72000"
        }, {
            label: "Refrigerator",
            value: "81000"
        }, {
            label: "Head Phone",
            value: "75000"
        }]
    }, {
        /**
         * [Category vs Order]
         * @type {Object}
         */
        params: {
            dimension: 'Category',
            measure: 'Order'
        },
        chart: {
            "caption": "Top 5 categories by orders",
            "subCaption": "Last month",
            "yAxisName": "Order",
            "numberPrefix": "",
            "paletteColors": "#0075c2",
            "bgColor": "#ffffff",
            "showBorder": "0",
            "showCanvasBorder": "0",
            "usePlotGradientColor": "0",
            "plotBorderAlpha": "10",
            "placeValuesInside": "1",
            "valueFontColor": "#ffffff",
            "showAxisLines": "1",
            "axisLineAlpha": "25",
            "divLineAlpha": "10",
            "alignCaptionWithCanvas": "0",
            "showAlternateVGridColor": "0",
            "captionFontSize": "14",
            "subcaptionFontSize": "14",
            "subcaptionFontBold": "0",
            "toolTipColor": "#ffffff",
            "toolTipBorderThickness": "0",
            "toolTipBgColor": "#000000",
            "toolTipBgAlpha": "80",
            "toolTipBorderRadius": "2",
            "toolTipPadding": "5"
        },
        data: [{
            label: "Mobile Phone",
            value: "67000"
        }, {
            label: "Laptop",
            value: "88000"
        }, {

            label: "Television",
            value: "72000"
        }, {
            label: "Refrigerator",
            value: "81000"
        }, {
            label: "Head Phone",
            value: "75000"
        }]
    }]

};

},{}],4:[function(require,module,exports){
'use strict';
/**
 * [ChartController build the chart depending on data value]
 * @param {object} $scope   [scope of the controller]
 * @param {object} Constant [config file maintained for data]
 */
function ChartController($scope, Constant) {
    var vm = this;
    /**
     * [initialization function]
     * @return {[type]} [description]
     */
    $scope.init = function() {
            $scope.chartParams = {};
            $scope.myDataSource = {};
            $scope.flag = false;
            /**
             * [describes the qualitative data]
             * @type {Array}
             */
            $scope.dimensions = ['Brand', 'Category'];
            /**
             * [describes the quantitative data]
             * @type {Array}
             */
            $scope.measures = ['Revenue', 'Sales', 'Order'];
            /**
             * [Describes the chart type: Bar or Coloumn]
             * @type {Array}
             */
            vm.filterType = [{
                value: 'bar2d',
                label: 'Bar'
            }, {
                value: 'column2d',
                label: 'Coloumn'
            }];
            vm.filterList = vm.filterType[0];
        }
        /**
         * [Generate chart function]
         * @return {[type]} [description]
         */
    $scope.generateChart = function() {
            if ($scope.chartParams.dimension && $scope.chartParams.measure) {
                /**
                 * [matching the current value with the data stored]
                 * @param  {object} val  [each data object in the array]
                 */
                angular.forEach(Constant.ChartData, function(val, key) {
                    if (val.params.dimension === $scope.chartParams.dimension && val.params.measure === $scope.chartParams.measure) {
                        $scope.myDataSource = {
                            chart: val.chart,
                            data: val.data
                        }
                    }
                });
            }
        }
        /**
         * [Dimension drop area functionality]
         * @param  {string} data [The X-axis Parameter dropped]
         * @param  {object} evt  [drop event]
         */
    $scope.onDropCompleteDimensions = function(data, evt) {
            console.log(data, typeof(data), evt, typeof(evt));
            $scope.dimensionDropped = data;
            $scope.chartParams.dimension = $scope.dimensionDropped;
            $scope.generateChart();
        }
        /**
         * [Measures drop area functionality]
         * @param  {string} data [The Y-axis parameter dropped]
         * @param  {object} evt  [drop event]
         */
    $scope.onDropCompleteMeasures = function(data, evt) {
            $scope.measuresDropped = data;
            $scope.chartParams.measure = $scope.measuresDropped;
            $scope.generateChart();
        }
        /**
         * [Drag functiom]
         * @param  {string} data [The data which is dragged]
         * @param  {object} evt  [drag event]
         * @param  {string} val  [type of data]
         */
    $scope.onDragComplete = function(data, evt, val) {
        console.log('in drag:', val);
        switch (val) {
            case 'dimension':
                $scope.onDropCompleteDimensions(data, evt);
                break;
            case 'measure':
                $scope.onDropCompleteMeasures(data, evt);
                break;
        }
    }
}

ChartController.$inject = ['$scope', 'Constant'];
module.exports = ChartController;

},{}],5:[function(require,module,exports){
'use strict';

module.exports = angular.module('ChartTask.modules.public', ['ui.router'])
    .config(require('./router/router'))
    .constant('Constant', require('./config/constant'))
    .controller('ChartController', require('./controllers/ChartController'))

},{"./config/constant":3,"./controllers/ChartController":4,"./router/router":6}],6:[function(require,module,exports){
'use strict';
module.exports = [
    '$stateProvider',
    '$urlRouterProvider',
    function($stateProvider, $urlRouterProvider) {
        $stateProvider
            .state('chart', {
                url: '/chart',
                template: require('../templates/chart.html'),
                controller: 'ChartController',
                controllerAs: 'vm'
            })
        $urlRouterProvider.otherwise('/chart');
    }
];

},{"../templates/chart.html":7}],7:[function(require,module,exports){
module.exports = "<div class=container-fluid><div class=chart-header>Chart Builder</div><div class=row ng-init=init()><div class=\"col-lg-2 left-panel\"><div class=\"axis-value background-grey\"><div class=\"header-axis-value text-decoration-underline\">Dimensions</div><ul><li class=specification-list ng-repeat=\"dimension in dimensions\"><div ng-drag=true ng-drag-data=dimension ng-drag-success=\"onDragComplete($data,$event,'dimension')\" data-allow-transform=true class=ng-binding draggable=false ng-bind=dimension></div></li></ul></div><div class=\"axis-value background-grey\"><div class=\"header-axis-value text-decoration-underline\">Measures</div><ul><li class=specification-list ng-repeat=\"measure in measures\"><div ng-drag=true ng-drag-data=measure data-allow-transform=true class=ng-binding ng-drag-success=\"onDragComplete($data,$event,'measure')\" draggable=false ng-bind=measure></div></li></ul></div></div><div class=\"col-lg-10 right-panel\"><div class=row><div class=dimension-drag-zone><div class=\"header-axis-value min-height-dimension background-grey\" ng-drop=true><span class=\"text-decoration-underline pad-left15\">Dimensions</span><div class=pad-left15><span class=dimension-properties ng-bind=dimensionDropped></span></div></div></div><div class=\"col-lg-2 mt-10 pad0\"><div class=\"header-axis-value min-height-measures background-grey\" ng-drop=true><span class=\"text-decoration-underline pad-left15\">Measures</span><div class=pad-left15 ng-bind=measuresDropped></div></div></div><div class=\"col-lg-10 mt-10\"><div class=\"chart-dimension background-grey\"><div class=pull-right><label class=\"order-text-view mtr5\"><select class=\"filter-select form-control table-filter-field inline-block width-70\" ng-model=vm.filterList ng-options=\" filter as filter.label for filter in vm.filterType\"></select></label></div><div class=chart-container fusioncharts width=600 height=400 type={{vm.filterList.value}} datasource={{myDataSource}}></div></div></div></div></div></div></div>";

},{}]},{},[1])